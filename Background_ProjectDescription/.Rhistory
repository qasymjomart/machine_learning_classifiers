prop.trend.test(EA_cntr,EA_cntr+EA_case)
prop.trend.test(EA_cntr,EA_cntr+AA_cntr)
prop.trend.test(AA_cntr,AA_cntr+EA_cntr)
prop.trend.test(AA_case,AA_case+EA_case)
AA_case
EA_case
prop.trend.test(AA_cntr,AA_cntr+AA_case)
prop.trend.test(AA_case,AA_cntr+AA_case)
prop.trend.test(EA_cntr,EA_cntr+EA_case)
load("/Users/aminzollanvari/Downloads/all.ccs.RData")
ls()
all.ccs
library("mvtnorm")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/RMS_Bayes_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Cross_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Bayes_2_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/True_2_total_C.R")#
#assumption 1. m0 = mu0 and m1=mu1 then everything depend on Mahab. #
u2_u1_u2_u1=c(0.2,2,4,10)#
gamma=c(0.1,0.5,1,2,10)#
pvec=seq(5,100,by=5)#
n0vec=seq(25,100,by=5)#
delta_gamma_p_n_RMS_matrix=list()
i=1
ii=1
j=1
jj=1
gamma0=gamma[j]#
		gamma1=gamma0#
		delta_u2_u1_u2_u1 = u2_u1_u2_u1[i]#
		delta_u1H_u2_u1H_u2=delta_u2_u1_u2_u1#
		delta_u1H_u1_u1H_u1=0#
		delta_u1H_u1_u1_u2=0#
		delta_u1H_u1_u2H_u1=0#
		delta_u2H_u2_u2_u1=0#
		delta_u2H_u2_u1H_u2=0#
		delta_u2H_u1_u2H_u1=delta_u2_u1_u2_u1#
		delta_u2H_u2_u2H_u2=0#
		delta_u1H_u1_u2_u1=0#
		delta_u2H_u2_u1_u2=0#
		ii=0#
		p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))
for (p in pvec){#
			ii=ii+1#
			jj=0#
			for (n0 in n0vec){#
				jj=jj+1#
				p_n_RMS_matrix[ii,jj]=RMS_Bayes_C(n0,n1,p,gamma0,gamma1,delta_u2_u1_u2_u1,#
 delta_u1H_u2_u1H_u2,delta_u1H_u1_u1H_u1,delta_u1H_u1_u1_u2,delta_u1H_u1_u2H_u1,#
delta_u2H_u2_u2_u1,delta_u2H_u2_u1H_u2,delta_u2H_u1_u2H_u1,delta_u2H_u2_u2H_u2,delta_u1H_u1_u2_u1,delta_u2H_u2_u1_u2) 				#
			}#
		}
library("mvtnorm")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/RMS_Bayes_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Cross_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Bayes_2_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/True_2_total_C.R")
p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))#
		for (p in pvec){#
			ii=ii+1#
			jj=0#
			for (n0 in n0vec){#
				jj=jj+1#
				p_n_RMS_matrix[ii,jj]=RMS_Bayes_C(n0,n1,p,gamma0,gamma1,delta_u2_u1_u2_u1,#
 delta_u1H_u2_u1H_u2,delta_u1H_u1_u1H_u1,delta_u1H_u1_u1_u2,delta_u1H_u1_u2H_u1,#
delta_u2H_u2_u2_u1,delta_u2H_u2_u1H_u2,delta_u2H_u1_u2H_u1,delta_u2H_u2_u2H_u2,delta_u1H_u1_u2_u1,delta_u2H_u2_u1_u2) 				#
			}#
		}
rm(list=ls())
library("mvtnorm")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/RMS_Bayes_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Cross_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Bayes_2_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/True_2_total_C.R")
p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))#
		for (p in pvec){#
			ii=ii+1#
			jj=0#
			for (n0 in n0vec){#
				jj=jj+1#
				p_n_RMS_matrix[ii,jj]=RMS_Bayes_C(n0,n1,p,gamma0,gamma1,delta_u2_u1_u2_u1,#
 delta_u1H_u2_u1H_u2,delta_u1H_u1_u1H_u1,delta_u1H_u1_u1_u2,delta_u1H_u1_u2H_u1,#
delta_u2H_u2_u2_u1,delta_u2H_u2_u1H_u2,delta_u2H_u1_u2H_u1,delta_u2H_u2_u2H_u2,delta_u1H_u1_u2_u1,delta_u2H_u2_u1_u2) 				#
			}#
		}
u2_u1_u2_u1=c(0.2,2,4,10)#
gamma=c(0.1,0.5,1,2,10)#
pvec=seq(5,100,by=5)#
n0vec=seq(25,100,by=5)#
delta_gamma_p_n_RMS_matrix=list()
gamma0=gamma[j]#
		gamma1=gamma0#
		delta_u2_u1_u2_u1 = u2_u1_u2_u1[i]#
		delta_u1H_u2_u1H_u2=delta_u2_u1_u2_u1#
		delta_u1H_u1_u1H_u1=0#
		delta_u1H_u1_u1_u2=0#
		delta_u1H_u1_u2H_u1=0#
		delta_u2H_u2_u2_u1=0#
		delta_u2H_u2_u1H_u2=0#
		delta_u2H_u1_u2H_u1=delta_u2_u1_u2_u1#
		delta_u2H_u2_u2H_u2=0#
		delta_u1H_u1_u2_u1=0#
		delta_u2H_u2_u1_u2=0#
		ii=0#
		p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))
i=1
ii=1
j=1
jj=1
gamma0=gamma[j]#
		gamma1=gamma0#
		delta_u2_u1_u2_u1 = u2_u1_u2_u1[i]#
		delta_u1H_u2_u1H_u2=delta_u2_u1_u2_u1#
		delta_u1H_u1_u1H_u1=0#
		delta_u1H_u1_u1_u2=0#
		delta_u1H_u1_u2H_u1=0#
		delta_u2H_u2_u2_u1=0#
		delta_u2H_u2_u1H_u2=0#
		delta_u2H_u1_u2H_u1=delta_u2_u1_u2_u1#
		delta_u2H_u2_u2H_u2=0#
		delta_u1H_u1_u2_u1=0#
		delta_u2H_u2_u1_u2=0#
		ii=0#
		p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))
jj=0
ii=0#
		p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))#
		for (p in pvec){#
			ii=ii+1#
			jj=0#
			for (n0 in n0vec){#
				jj=jj+1#
				p_n_RMS_matrix[ii,jj]=RMS_Bayes_C(n0,n1,p,gamma0,gamma1,delta_u2_u1_u2_u1,#
 delta_u1H_u2_u1H_u2,delta_u1H_u1_u1H_u1,delta_u1H_u1_u1_u2,delta_u1H_u1_u2H_u1,#
delta_u2H_u2_u2_u1,delta_u2H_u2_u1H_u2,delta_u2H_u1_u2H_u1,delta_u2H_u2_u2H_u2,delta_u1H_u1_u2_u1,delta_u2H_u2_u1_u2) 				#
			}#
		}
ii=0#
		p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))#
		for (p in pvec){#
			ii=ii+1#
			jj=0#
			for (n0 in n0vec){#
				n1=n0#
				jj=jj+1#
				p_n_RMS_matrix[ii,jj]=RMS_Bayes_C(n0,n1,p,gamma0,gamma1,delta_u2_u1_u2_u1,#
 delta_u1H_u2_u1H_u2,delta_u1H_u1_u1H_u1,delta_u1H_u1_u1_u2,delta_u1H_u1_u2H_u1,#
delta_u2H_u2_u2_u1,delta_u2H_u2_u1H_u2,delta_u2H_u1_u2H_u1,delta_u2H_u2_u2H_u2,delta_u1H_u1_u2_u1,delta_u2H_u2_u1_u2) 				#
			}#
		}
p_n_RMS_matrix
delta_gamma_p_n_RMS_matrix[[i]][j]=p_n_RMS_matrix
i
delta_gamma_p_n_RMS_matrix=list()
delta_gamma_p_n_RMS_matrix[[i]]=p_n_RMS_matrix
delta_gamma_p_n_RMS_matrix
delta_gamma_p_n_RMS_matrix[i]=p_n_RMS_matrix
delta_gamma_p_n_RMS_matrix[[i]]=p_n_RMS_matrix
delta_gamma_p_n_RMS_matrix
delta_gamma_p_n_RMS_matrix[[i]][[j]]=p_n_RMS_matrix
delta_gamma_p_n_RMS_matrix[[i]][j]=p_n_RMS_matrix
This function computes RMS of Bayesian #
# using analytical results#
# with the assumption of known covariance matrix.  #
# Assuming priors are 0.5 for each class#
# Author: Amin Zollanvari#
# date: Jan/17/13#
###########################
rm(list=ls())#
library("mvtnorm")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/RMS_Bayes_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Cross_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Bayes_2_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/True_2_total_C.R")#
#assumption 1. m0 = mu0 and m1=mu1 then everything depend on Mahab. #
#u2_u1_u2_u1=c(0.2,2,4,10)#
u2_u1_u2_u1=c(0.2)#
#gamma=c(0.1,0.5,1,2,10)#
gamma=c(0.1,0.5)#
pvec=seq(5,100,by=5)#
n0vec=seq(25,100,by=5)#
delta_gamma_p_n_RMS_matrix=list()#
ij=0#
for (i in 1:length(u2_u1_u2_u1)) {#
	for (j in 1:length(gamma)){#
		ij=1#
		gamma0=gamma[j]#
		gamma1=gamma0#
		delta_u2_u1_u2_u1 = u2_u1_u2_u1[i]#
		delta_u1H_u2_u1H_u2=delta_u2_u1_u2_u1#
		delta_u1H_u1_u1H_u1=0#
		delta_u1H_u1_u1_u2=0#
		delta_u1H_u1_u2H_u1=0#
		delta_u2H_u2_u2_u1=0#
		delta_u2H_u2_u1H_u2=0#
		delta_u2H_u1_u2H_u1=delta_u2_u1_u2_u1#
		delta_u2H_u2_u2H_u2=0#
		delta_u1H_u1_u2_u1=0#
		delta_u2H_u2_u1_u2=0#
		ii=0#
		p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))#
		for (p in pvec){#
			ii=ii+1#
			jj=0#
			for (n0 in n0vec){#
				n1=n0#
				jj=jj+1#
				p_n_RMS_matrix[ii,jj]=RMS_Bayes_C(n0,n1,p,gamma0,gamma1,delta_u2_u1_u2_u1,#
 delta_u1H_u2_u1H_u2,delta_u1H_u1_u1H_u1,delta_u1H_u1_u1_u2,delta_u1H_u1_u2H_u1,#
delta_u2H_u2_u2_u1,delta_u2H_u2_u1H_u2,delta_u2H_u1_u2H_u1,delta_u2H_u2_u2H_u2,delta_u1H_u1_u2_u1,delta_u2H_u2_u1_u2) 				#
			}#
		}#
		delta_gamma_p_n_RMS_matrix[[ij]]=p_n_RMS_matrix#
	}	#
}#
layout(matrix(c(1,2,3,4),nrow=2,byrow=TRUE))#
par(mar=c(2,2,1,1)+0.1)#
#
persp(RMS_desired,NN, t(MAHAB_min_3), theta = 30, phi = 20, col = "lightblue",main="p=3",xlab="RMS",ylab="n",ticktype = "detailed",scale=0.5,zlab="min M.D.",nticks=7)#
#
persp(RMS_desired,NN, t(MAHAB_min_6), theta = 30, phi = 20, col = "lightblue",main="p=6",xlab="RMS",ylab="n",ticktype = "detailed",scale=0.5,zlab="min M.D.",nticks=7)#
#
persp(RMS_desired,NN, t(MAHAB_min_9), theta = 30, phi = 20, col = "lightblue",main="p=9",xlab="RMS",ylab="n",ticktype = "detailed",scale=0.5,zlab="min M.D.",nticks=7)#
#
persp(RMS_desired,NN, t(MAHAB_min_15), theta = 30, phi = 20, col = "lightblue",main="p=15",xlab="RMS",ylab="n",ticktype = "detailed",scale=0.5,zlab="min M.D.",nticks=7)#
# # quartz(width = 7, height =  5)#
# layout(matrix(c(1,2,3,4),ncol=2,byrow =TRUE),c(1,1),c(1,1))#
# par(mar=c(2,2,0,0)+0.8)#
#
# n=seq(40,200,by=10)#
# mm=seq(40,200,by=10)#
# mmmm=c(120,140,160,180,200)#
#
# nn=seq(1,17,by=1)#
# nnn=seq(8,17)#
#
# plot(n,RMS_MC_3_UNC,pch=1,col=1,type="n",ylab="",xlab="n",ylim=c(0,0.13),xlim=c(40,205),xaxt="n",fig=c(1,1.1,1,1.1),cex=0.7)#
# lines(mm,RMS_MC_3_UNC,lty=1,col=1,type="l",ylab="",xlab="",ylim=c(0.1,0.13),xlim=c(40,205),xaxt="n",cex=0.7,lwd=1.25)#
# axis(1, xaxp=c(40,200,n=16))#
# #lines(mm,rep(0,17),type="l",lty=1,col=2,cex=0.7,pch=1)#
#
# lines(mm,RMS_MC_3_C,lty=2,col=1,type="l",xaxt="n",cex=0.7,lwd=1.25)#
#
# lines(mm,RMS_ANAL_3_C,type="l",lty=2,col=2,cex=0.7)#
# lines(mm,RMS_ANAL_3_UNC,type="l",lty=1,col=2,cex=0.7)#
#
# legend("topright",c("MC RMS Uncond","asym RMS Uncond","MC RMS Cond","asym RMS Cond"), lty=c(1,1,2,2),col=c(1,2,1,2),#
# cex=0.7)#
# legend("topleft", legend = c("p = 3"),cex=0.65)
length(delta_gamma_p_n_RMS_matrix)
This function computes RMS of Bayesian #
# using analytical results#
# with the assumption of known covariance matrix.  #
# Assuming priors are 0.5 for each class#
# Author: Amin Zollanvari#
# date: Jan/17/13#
###########################
rm(list=ls())#
library("mvtnorm")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/RMS_Bayes_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Cross_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Bayes_2_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/True_2_total_C.R")#
#assumption 1. m0 = mu0 and m1=mu1 then everything depend on Mahab. #
#u2_u1_u2_u1=c(0.2,2,4,10)#
u2_u1_u2_u1=c(0.2)#
#gamma=c(0.1,0.5,1,2,10)#
gamma=c(0.1,0.5)#
pvec=seq(5,100,by=5)#
n0vec=seq(25,100,by=5)#
delta_gamma_p_n_RMS_matrix=list()#
ij=0#
for (i in 1:length(u2_u1_u2_u1)) {#
	for (j in 1:length(gamma)){#
		ij=ij+1#
		gamma0=gamma[j]#
		gamma1=gamma0#
		delta_u2_u1_u2_u1 = u2_u1_u2_u1[i]#
		delta_u1H_u2_u1H_u2=delta_u2_u1_u2_u1#
		delta_u1H_u1_u1H_u1=0#
		delta_u1H_u1_u1_u2=0#
		delta_u1H_u1_u2H_u1=0#
		delta_u2H_u2_u2_u1=0#
		delta_u2H_u2_u1H_u2=0#
		delta_u2H_u1_u2H_u1=delta_u2_u1_u2_u1#
		delta_u2H_u2_u2H_u2=0#
		delta_u1H_u1_u2_u1=0#
		delta_u2H_u2_u1_u2=0#
		ii=0#
		p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))#
		for (p in pvec){#
			ii=ii+1#
			jj=0#
			for (n0 in n0vec){#
				n1=n0#
				jj=jj+1#
				p_n_RMS_matrix[ii,jj]=RMS_Bayes_C(n0,n1,p,gamma0,gamma1,delta_u2_u1_u2_u1,#
 delta_u1H_u2_u1H_u2,delta_u1H_u1_u1H_u1,delta_u1H_u1_u1_u2,delta_u1H_u1_u2H_u1,#
delta_u2H_u2_u2_u1,delta_u2H_u2_u1H_u2,delta_u2H_u1_u2H_u1,delta_u2H_u2_u2H_u2,delta_u1H_u1_u2_u1,delta_u2H_u2_u1_u2) 				#
			}#
		}#
		delta_gamma_p_n_RMS_matrix[[ij]]=p_n_RMS_matrix#
	}	#
}#
layout(matrix(c(1,2,3,4),nrow=2,byrow=TRUE))#
par(mar=c(2,2,1,1)+0.1)#
#
persp(RMS_desired,NN, t(MAHAB_min_3), theta = 30, phi = 20, col = "lightblue",main="p=3",xlab="RMS",ylab="n",ticktype = "detailed",scale=0.5,zlab="min M.D.",nticks=7)#
#
persp(RMS_desired,NN, t(MAHAB_min_6), theta = 30, phi = 20, col = "lightblue",main="p=6",xlab="RMS",ylab="n",ticktype = "detailed",scale=0.5,zlab="min M.D.",nticks=7)#
#
persp(RMS_desired,NN, t(MAHAB_min_9), theta = 30, phi = 20, col = "lightblue",main="p=9",xlab="RMS",ylab="n",ticktype = "detailed",scale=0.5,zlab="min M.D.",nticks=7)#
#
persp(RMS_desired,NN, t(MAHAB_min_15), theta = 30, phi = 20, col = "lightblue",main="p=15",xlab="RMS",ylab="n",ticktype = "detailed",scale=0.5,zlab="min M.D.",nticks=7)#
# # quartz(width = 7, height =  5)#
# layout(matrix(c(1,2,3,4),ncol=2,byrow =TRUE),c(1,1),c(1,1))#
# par(mar=c(2,2,0,0)+0.8)#
#
# n=seq(40,200,by=10)#
# mm=seq(40,200,by=10)#
# mmmm=c(120,140,160,180,200)#
#
# nn=seq(1,17,by=1)#
# nnn=seq(8,17)#
#
# plot(n,RMS_MC_3_UNC,pch=1,col=1,type="n",ylab="",xlab="n",ylim=c(0,0.13),xlim=c(40,205),xaxt="n",fig=c(1,1.1,1,1.1),cex=0.7)#
# lines(mm,RMS_MC_3_UNC,lty=1,col=1,type="l",ylab="",xlab="",ylim=c(0.1,0.13),xlim=c(40,205),xaxt="n",cex=0.7,lwd=1.25)#
# axis(1, xaxp=c(40,200,n=16))#
# #lines(mm,rep(0,17),type="l",lty=1,col=2,cex=0.7,pch=1)#
#
# lines(mm,RMS_MC_3_C,lty=2,col=1,type="l",xaxt="n",cex=0.7,lwd=1.25)#
#
# lines(mm,RMS_ANAL_3_C,type="l",lty=2,col=2,cex=0.7)#
# lines(mm,RMS_ANAL_3_UNC,type="l",lty=1,col=2,cex=0.7)#
#
# legend("topright",c("MC RMS Uncond","asym RMS Uncond","MC RMS Cond","asym RMS Cond"), lty=c(1,1,2,2),col=c(1,2,1,2),#
# cex=0.7)#
# legend("topleft", legend = c("p = 3"),cex=0.65)
length(delta_gamma_p_n_RMS_matrix)
seq(1:(length(gamma))*length(u2_u1_u2_u1))
layout(matrix(seq(1:(length(gamma))*length(u2_u1_u2_u1)),nrow=length(gamma),byrow=TRUE))#
par(mar=c(2,2,1,1)+0.1)
? persp
layout(matrix(seq(1:(length(gamma))*length(u2_u1_u2_u1)),nrow=length(gamma),byrow=FALSE))#
par(mar=c(2,2,1,1)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
persp(pvec,n0vec, t(delta_gamma_p_n_RMS_matrix[[k]]), theta = 30, phi = 20, col = "lightblue",main="p=3",xlab="p",ylab="n0",ticktype = "detailed",scale=0.5,zlab="",nticks=7)#
#
}
t(delta_gamma_p_n_RMS_matrix[[k]])
z= t(delta_gamma_p_n_RMS_matrix[[k]])
class9z
class(z)
layout(matrix(seq(1:(length(gamma))*length(u2_u1_u2_u1)),nrow=length(gamma),byrow=FALSE))#
par(mar=c(2,2,1,1)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= (delta_gamma_p_n_RMS_matrix[[k]])#
persp(pvec,n0vec, , theta = 30, phi = 20, col = "lightblue",main="p=3",xlab="p",ylab="n0",ticktype = "detailed",scale=0.5,zlab="",nticks=7)#
#
}
? persp
layout(matrix(seq(1:(length(gamma))*length(u2_u1_u2_u1)),nrow=length(gamma),byrow=FALSE))#
par(mar=c(2,2,1,1)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= (delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(pvec,n0vec,z, theta = 30, phi = 20, col = "lightblue",main="p=3",xlab="p",ylab="n0",ticktype = "detailed",scale=0.5,zlab="",nticks=7)#
#
}
layout(matrix(seq(1:(length(gamma))*length(u2_u1_u2_u1)),nrow=length(gamma),byrow=FALSE))#
par(mar=c(2,2,1,1)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65)#
#
}
This function computes RMS of Bayesian #
# using analytical results#
# with the assumption of known covariance matrix.  #
# Assuming priors are 0.5 for each class#
# Author: Amin Zollanvari#
# date: Jan/17/13#
###########################
rm(list=ls())#
library("mvtnorm")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/RMS_Bayes_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Cross_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Bayes_2_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/True_2_total_C.R")#
#assumption 1. m0 = mu0 and m1=mu1 then everything depend on Mahab. #
u2_u1_u2_u1=c(0.2,2,4,10)#
#u2_u1_u2_u1=c(0.2)#
gamma=c(0.1,0.5,1,2,10)#
pvec=seq(5,100,by=5)#
n0vec=seq(25,100,by=5)#
delta_gamma_p_n_RMS_matrix=list()#
ij=0#
for (i in 1:length(u2_u1_u2_u1)) {#
	for (j in 1:length(gamma)){#
		ij=ij+1#
		gamma0=gamma[j]#
		gamma1=gamma0#
		delta_u2_u1_u2_u1 = u2_u1_u2_u1[i]#
		delta_u1H_u2_u1H_u2=delta_u2_u1_u2_u1#
		delta_u1H_u1_u1H_u1=0#
		delta_u1H_u1_u1_u2=0#
		delta_u1H_u1_u2H_u1=0#
		delta_u2H_u2_u2_u1=0#
		delta_u2H_u2_u1H_u2=0#
		delta_u2H_u1_u2H_u1=delta_u2_u1_u2_u1#
		delta_u2H_u2_u2H_u2=0#
		delta_u1H_u1_u2_u1=0#
		delta_u2H_u2_u1_u2=0#
		ii=0#
		p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))#
		for (p in pvec){#
			ii=ii+1#
			jj=0#
			for (n0 in n0vec){#
				n1=n0#
				jj=jj+1#
				p_n_RMS_matrix[ii,jj]=RMS_Bayes_C(n0,n1,p,gamma0,gamma1,delta_u2_u1_u2_u1,#
 delta_u1H_u2_u1H_u2,delta_u1H_u1_u1H_u1,delta_u1H_u1_u1_u2,delta_u1H_u1_u2H_u1,#
delta_u2H_u2_u2_u1,delta_u2H_u2_u1H_u2,delta_u2H_u1_u2H_u1,delta_u2H_u2_u2H_u2,delta_u1H_u1_u2_u1,delta_u2H_u2_u1_u2) 				#
			}#
		}#
		delta_gamma_p_n_RMS_matrix[[ij]]=p_n_RMS_matrix#
	}	#
}#
layout(matrix(seq(1:(length(gamma))*length(u2_u1_u2_u1)),nrow=length(gamma),byrow=FALSE))#
par(mar=c(2,2,1,1)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65)#
#
}#
# # quartz(width = 7, height =  5)#
# layout(matrix(c(1,2,3,4),ncol=2,byrow =TRUE),c(1,1),c(1,1))#
# par(mar=c(2,2,0,0)+0.8)#
#
# n=seq(40,200,by=10)#
# mm=seq(40,200,by=10)#
# mmmm=c(120,140,160,180,200)#
#
# nn=seq(1,17,by=1)#
# nnn=seq(8,17)#
#
# plot(n,RMS_MC_3_UNC,pch=1,col=1,type="n",ylab="",xlab="n",ylim=c(0,0.13),xlim=c(40,205),xaxt="n",fig=c(1,1.1,1,1.1),cex=0.7)#
# lines(mm,RMS_MC_3_UNC,lty=1,col=1,type="l",ylab="",xlab="",ylim=c(0.1,0.13),xlim=c(40,205),xaxt="n",cex=0.7,lwd=1.25)#
# axis(1, xaxp=c(40,200,n=16))#
# #lines(mm,rep(0,17),type="l",lty=1,col=2,cex=0.7,pch=1)#
#
# lines(mm,RMS_MC_3_C,lty=2,col=1,type="l",xaxt="n",cex=0.7,lwd=1.25)#
#
# lines(mm,RMS_ANAL_3_C,type="l",lty=2,col=2,cex=0.7)#
# lines(mm,RMS_ANAL_3_UNC,type="l",lty=1,col=2,cex=0.7)#
#
# legend("topright",c("MC RMS Uncond","asym RMS Uncond","MC RMS Cond","asym RMS Cond"), lty=c(1,1,2,2),col=c(1,2,1,2),#
# cex=0.7)#
# legend("topleft", legend = c("p = 3"),cex=0.65)
matrix(seq(1:(length(gamma))*length(u2_u1_u2_u1))
,nrow=length(gamma),byrow=FALSE)
seq(1:(length(gamma))*length(u2_u1_u2_u1))
seq(1:((length(gamma))*length(u2_u1_u2_u1)))
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(2,2,1,1)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65)#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(1,1,1,1)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65)#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,1,1)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65)#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65)#
#
}
? persp
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65)#
#
}
? zlim
? persp
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65,zlim=c(0,0.35))#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65,zlim=c(0.02,0.38))#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65,zlim=c(0.01,0.38))#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.65,zlim=c(0.00,0.38))#
#
}
delta_gamma_p_n_RMS_matrix[[5]]
max(delta_gamma_p_n_RMS_matrix[[5]])
max(delta_gamma_p_n_RMS_matrix[[16]])
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=7,r=7,cex.axis=0.65,zlim=c(0.00,0.38))#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38))#
#
}
? persp
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38),ann=FALSE)#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38),mgp=c(2,1,0))#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38),mgp=c(4,3,3))#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38),mpg=c(4,3,3))#
#
}
? persp
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38),zlab="\n")#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab="", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38),zlab=" ")#
#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38))#
#
}
trans3dfun <- function(v) { trans3d(v[1],v[2],v[3],p1) }#
labelbot2d <- trans3dfun(labelbot3d)#
labelmid2d <- trans3dfun(labelmid3d)#
labeltop2d <- trans3dfun(labeltop3d)#
labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
text(labelmid2d[1]$x,labelmid2d$y,"z label")
trans3dfun <- function(v) { trans3d(v[1],v[2],v[3],p1) }
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38))#
#
xpos <- min(x)-(diff(range(x)))*labelspace#
ypos <- min(y)-(diff(range(y)))*labelspace#
labelbot3d <- c(xpos,ypos,min(z))#
labeltop3d <- c(xpos,ypos,max(z))#
labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
labelbot2d <- trans3dfun(labelbot3d)#
labelmid2d <- trans3dfun(labelmid3d)#
labeltop2d <- trans3dfun(labeltop3d)#
labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
text(labelmid2d[1]$x,labelmid2d$y,"z label")#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38))#
x=n0vec#
y=pvec#
labelspace <- 0.12#
#
xpos <- min(x)-(diff(range(x)))*labelspace#
ypos <- min(y)-(diff(range(y)))*labelspace#
labelbot3d <- c(xpos,ypos,min(z))#
labeltop3d <- c(xpos,ypos,max(z))#
labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
labelbot2d <- trans3dfun(labelbot3d)#
labelmid2d <- trans3dfun(labelmid3d)#
labeltop2d <- trans3dfun(labeltop3d)#
labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
text(labelmid2d[1]$x,labelmid2d$y,"z label")#
}
labelmid2d
trans3dfun(labelbot3d)
par(xpd=NA,srt=labelang)
par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
text(labelmid2d[1]$x,labelmid2d$y)
xpos <- min(x)-(diff(range(x)))*labelspace#
ypos <- min(y)-(diff(range(y)))*labelspace#
labelbot3d <- c(xpos,ypos,min(z))#
labeltop3d <- c(xpos,ypos,max(z))#
labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
labelbot2d <- trans3dfun(labelbot3d)#
labelmid2d <- trans3dfun(labelmid3d)#
labeltop2d <- trans3dfun(labeltop3d)#
labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
text(labelmid2d[1]$x,labelmid2d$y)
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38))#
x=n0vec#
y=pvec#
labelspace <- 0.12#
#
xpos <- min(x)-(diff(range(x)))*labelspace#
ypos <- min(y)-(diff(range(y)))*labelspace#
labelbot3d <- c(xpos,ypos,min(z))#
labeltop3d <- c(xpos,ypos,max(z))#
labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
labelbot2d <- trans3dfun(labelbot3d)#
labelmid2d <- trans3dfun(labelmid3d)#
labeltop2d <- trans3dfun(labeltop3d)#
labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
? persp
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "simple",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
? persp
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.95,zlim=c(0.00,0.38))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.8,zlim=c(0.00,0.38))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.1)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.7,zlim=c(0.00,0.38))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.9)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.7,zlim=c(0.00,0.38))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.05)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.7,zlim=c(0.00,0.38))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
rm(list=ls())#
library("mvtnorm")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/RMS_Bayes_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Cross_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/Bayes_2_total_C.R")#
source("/Users/aminzollanvari/Documents/aTAMU/BayesianDoubleAsymp/functions/True_2_total_C.R")#
#assumption 1. m0 = mu0 and m1=mu1 then everything depend on Mahab. #
u2_u1_u2_u1=c(0.2,2,4,10)#
#u2_u1_u2_u1=c(0.2)#
gamma=c(0.1,0.5,1,2,10)#
pvec=seq(5,200,by=5)#
n0vec=seq(25,100,by=5)#
delta_gamma_p_n_RMS_matrix=list()#
ij=0#
for (i in 1:length(u2_u1_u2_u1)) {#
	for (j in 1:length(gamma)){#
		ij=ij+1#
		gamma0=gamma[j]#
		gamma1=gamma0#
		delta_u2_u1_u2_u1 = u2_u1_u2_u1[i]#
		delta_u1H_u2_u1H_u2=delta_u2_u1_u2_u1#
		delta_u1H_u1_u1H_u1=0#
		delta_u1H_u1_u1_u2=0#
		delta_u1H_u1_u2H_u1=0#
		delta_u2H_u2_u2_u1=0#
		delta_u2H_u2_u1H_u2=0#
		delta_u2H_u1_u2H_u1=delta_u2_u1_u2_u1#
		delta_u2H_u2_u2H_u2=0#
		delta_u1H_u1_u2_u1=0#
		delta_u2H_u2_u1_u2=0#
		ii=0#
		p_n_RMS_matrix=matrix(rep(0,length(pvec)*length(n0vec)),ncol=length(n0vec))#
		for (p in pvec){#
			ii=ii+1#
			jj=0#
			for (n0 in n0vec){#
				n1=n0#
				jj=jj+1#
				p_n_RMS_matrix[ii,jj]=RMS_Bayes_C(n0,n1,p,gamma0,gamma1,delta_u2_u1_u2_u1,#
 delta_u1H_u2_u1H_u2,delta_u1H_u1_u1H_u1,delta_u1H_u1_u1_u2,delta_u1H_u1_u2H_u1,#
delta_u2H_u2_u2_u1,delta_u2H_u2_u1H_u2,delta_u2H_u1_u2H_u1,delta_u2H_u2_u2H_u2,delta_u1H_u1_u2_u1,delta_u2H_u2_u1_u2) 				#
			}#
		}#
		delta_gamma_p_n_RMS_matrix[[ij]]=p_n_RMS_matrix#
	}	#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.05)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.7,zlim=c(0.00,0.38))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.05)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.7,zlim=c(0.00,0.45))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.05)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.7,zlim=c(0.00,0.47))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.05)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
#
p1=persp(n0vec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.7,zlim=c(0.00,0.46))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
layout(matrix(seq(1:((length(gamma))*length(u2_u1_u2_u1))),nrow=length(gamma),byrow=FALSE))#
par(mar=c(0.5,0.5,0.5,0.5)+0.05)#
#
for (k in 1:length(delta_gamma_p_n_RMS_matrix)) {#
#
z= t(delta_gamma_p_n_RMS_matrix[[k]])#
nvec=2*n0vec#
p1=persp(nvec,pvec,z, theta = 63, phi = 5, col = "lightblue",main="",xlab="n",ylab="p",ticktype = "detailed",scale=0.5,zlab=" ", nticks=5,r=7,cex.axis=0.7,zlim=c(0.00,0.46))#
# x=n0vec#
# y=pvec#
# labelspace <- 0.12#
#
# xpos <- min(x)-(diff(range(x)))*labelspace#
# ypos <- min(y)-(diff(range(y)))*labelspace#
# labelbot3d <- c(xpos,ypos,min(z))#
# labeltop3d <- c(xpos,ypos,max(z))#
# labelmid3d <- c(xpos,ypos,mean(range(z)))#
#
# labelbot2d <- trans3dfun(labelbot3d)#
# labelmid2d <- trans3dfun(labelmid3d)#
# labeltop2d <- trans3dfun(labeltop3d)#
# labelang <- 180/pi*atan2(labeltop2d$y-labelbot2d$y,labeltop2d$x-labelbot2d$x)#
# par(xpd=NA,srt=labelang)  ## disable clipping and set string rotation#
# text(labelmid2d[1]$x,labelmid2d$y)#
}
Adiag=rnorm(n)
? rnorm
sqrt(05)
sqrt(0.5)
n=1000#
Adiag=rnorm(n)#
Aelements=rnorm((n^2-n),sd=sqrt(0.5))#
H=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			H[i,j]=Adiag[i]#
		} else {#
			H[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}
eigen(H)
H[1:10,1:10]
n=1000#
Adiag=rnorm(n)#
Aelements=rnorm((n^2-n),sd=sqrt(0.5))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))
eigen(H)
H[1:10,1:10]
H[990:1000,990:1000]
length(Aelements)
i=1000
(i-1)*n
(i-1)*n+j
j
Aelements[(i-1)*n+j]
Aelements=rnorm((n^2),sd=sqrt(0.5))
length(Aelements)
n=1000#
Adiag=rnorm(n)#
Aelements=rnorm((n^2),sd=sqrt(0.5))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))
E=eigen(H)
E
E$values
hist(E$values)
hist(E$values,n=100)
n=3000#
Adiag=rnorm(n)#
Aelements=rnorm((n^2),sd=sqrt(0.5))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
E$values#
#
hist(E$values,n=100)
hist(i/n*(E$values),n=100)
i/n*(E$values)
(E$values)
E$values/n
P=E$values/n#
#
hist(P,n=100)
? hist
hist(P,n=100,xlim=c(-2,2))
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))
n=1000#
Adiag=rnorm(n,sqrt(2))#
Aelements=rnorm((n^2),sd=sqrt(1))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))
n=1000#
Adiag=rnorm(n,sd=sqrt(2))#
Aelements=rnorm((n^2),sd=sqrt(1))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))
n=1000#
Adiag=rnorm(n,sd=sqrt(2))#
Aelements=rnorm((n^2),sd=sqrt(1))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=2*pi*E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))
n=1000#
Adiag=rnorm(n,sd=sqrt(2))#
Aelements=rnorm((n^2),sd=sqrt(1))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))
max(P)
min(P)
n=1000#
Adiag=rnorm(n,sd=sqrt(2))#
Aelements=rnorm((n^2),sd=sqrt(1))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))#
max(P)#
min(P)
sqrt(2)
n=1000#
Adiag=rnorm(n,sd=sqrt(2))#
Aelements=rnorm((n^2),sd=sqrt(1))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))#
max(P)#
min(P)
sqrt(4-1.5^2)/(2*pi)
sqrt(4-1)/(2*pi)
Adiag=rnorm(n,sd=sqrt(1))#
Aelements=rnorm((n^2),sd=sqrt(1))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))#
max(P)#
min(P)
n=1000#
Adiag=rnorm(n)#
Aelements=rnorm((n^2))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))#
max(P)#
min(P)
n=1000#
Adiag=rnorm(n,sq=sqrt(2))#
Aelements=rnorm((n^2),sq=sqrt(2))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))#
max(P)#
min(P)
n=1000#
Adiag=rnorm(n,sd=sqrt(2))#
Aelements=rnorm((n^2),sd=sqrt(2))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}#
H=0.5*(A+t(A))#
E=eigen(H)#
P=E$values/sqrt(n)#
#
hist(P,n=100,xlim=c(-2,2))#
max(P)#
min(P)
n=1000#
Adiag=rnorm(n,sd=sqrt(2)) #note variance of elemets in a are four#
Aelements=rnorm((n^2),sd=sqrt(2))#
A=matrix(rep(0,n*n),ncol=n)#
for (i in 1:n){#
	for (j in 1:n){#
		if (i==j){#
			A[i,j]=Adiag[i]#
		} else {#
			A[i,j]=Aelements[(i-1)*n+j]#
		}#
	}#
}
Adiag
Aelements
dim(Aelements)
length(Aelements)
H=0.5*(A+t(A))
dim(H)
E=eigen(H)#
P=E$values/sqrt(n)
hist(P,n=100,xlim=c(-2,2))
E
dim(E)
27/30
90*0.9
0.01*90
0.01*90/100
442/16
884/16
884/30
0.13+0.125+0.125+0.12+0.07+0.065+0.065+0.06+0.06+0.06+0.05+0.01
42/60*(50/100000)
91000*3.67
20000*12
20000/3.67
91000/1200
91000/12
333000/12
119000/3.67
115000/3.67
set.seed(1)#
x <- 1:10#
y <- x + rnorm(10)#
delta <- runif(10)#
errbar( x, y, y + delta, y - delta )
library(Hmisc)
set.seed(1)#
x <- 1:10#
y <- x + rnorm(10)#
delta <- runif(10)#
errbar( x, y, y + delta, y - delta )
y
delta
73.69*2
200/92.79
mu=c(100000000,1,1,1)
eigen(mu%*%t(mu))
mu=c(100000000,100,100,100)
eigen(mu%*%t(mu))
mu%*%t(mu)
0.6180^7
13*0.6180-8
3000000000/3000
(0.5-1-1+sqrt((1-0.5+1)^2+4*0.5*1))/2
(1-1-1+sqrt((1-1+1)^2+4*1*1))/2
(2-1-1+sqrt((1-2+1)^2+4*2*1))/2
78593052-78621295
78,593,052-78,621,295
78593052-78621295
78000001-81400000
78000001-81400000-1
20*log(21.22/100)
20*log10(21.22/100)
11/.015
11/.15
18+20+19+21.5+17
3+19+19.5+16+18
13+6+18+13.5+2
2/3
3/4
10/11
6300/375
16.8/21
180*179/2
90*(1-0.2)
9100+910
6000*197
6000*197.28
1500*197.28
1000*197.28
500* 197.28
900*197.28
550*197.28
905*197.28
1183680+295920+197280+108504+178538
5000*197.28
4050*197.28
load("Data.RData")
ls()
rm(list=ls())
load("Data.RData")
ls()
Data
